apiVersion: v1
kind: Namespace
metadata:
  name: monitoring-stack

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data
  namespace: monitoring-stack
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: monitoring-stack
spec:
  ports:
    - port: 3306
      targetPort: 3306
      nodePort: 3307
  type: NodePort
  selector:
    app: mysql

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: monitoring-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: rootpassword
            - name: MYSQL_DATABASE
              value: user
            - name: MYSQL_USER
              value: veronika
            - name: MYSQL_PASSWORD
              value: 123
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data

---

apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: monitoring-stack
spec:
  ports:
    - port: 8081
      targetPort: 8081
  selector:
    app: user-service

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: monitoring-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: user-service:latest
          ports:
            - containerPort: 8081
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/user
            - name: SPRING_DATASOURCE_USERNAME
              value: veronika
            - name: SPRING_DATASOURCE_PASSWORD
              value: 123
          volumeMounts:
            - name: app-code
              mountPath: /app
      volumes:
        - name: app-code
          hostPath:
            path: src
            type: Directory

---

apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: monitoring-stack
spec:
  ports:
    - port: 9200
      targetPort: 9200
  selector:
    app: elasticsearch

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: monitoring-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
          ports:
            - containerPort: 9200
          env:
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: "false"
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"

---

apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: monitoring-stack
spec:
  ports:
    - port: 5601
      targetPort: 5601
  selector:
    app: kibana

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.6.2
          ports:
            - containerPort: 5601

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring-stack
spec:
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          hostPath:
            path: prometheus.yml
            type: File

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring-stack
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
