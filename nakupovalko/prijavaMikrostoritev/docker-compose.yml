services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    volumes:
      - ./keycloak:/opt/keycloak/data/h2
    ports:
      - "8080:8080"
    command: start-dev
    networks:
      - nakupovalko-network

  nakupovalko-prijava:
    build:
      context: .
    ports:
      - "8081:8081"
    depends_on:
      - keycloak
    networks:
      - nakupovalko-network
    environment:
      - KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/nakupovalko

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    environment:
      - "discovery.type=single-node"
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elk
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2
    environment:
      - LS_JAVA_OPTS=-Duser.timezone=UTC
    ports:
      - "5044:5044"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus


volumes:
  mysql_data:
  elasticsearch_data:

networks:
  elk:
    driver: bridge
  monitoring:
    driver: bridge
  nakupovalko-network:
    driver: bridge
