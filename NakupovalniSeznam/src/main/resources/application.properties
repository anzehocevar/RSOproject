# Server Configuration
server.port=8090

# Application Name
spring.application.name=ShoppingList

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/shopping_list_db?createDatabaseIfNotExist=true
#spring.datasource.url=jdbc:mysql://localhost:3306/shopping_list_db
#spring.datasource.url=jdbc:mysql://mysql:3306/shopping_list_db
spring.datasource.username=root
spring.datasource.password=mysql
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#item.service.url=http://item-service:8089/items
item.service.url=jdbc:mysql://localhost:3306/itemdb


# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Logging Configuration
logging.level.org.springframework=INFO

# OpenAPI Configuration
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha

# Resilience4j Configuration
# Circuit Breaker
resilience4j.circuitbreaker.instances.itemServiceCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.itemServiceCircuitBreaker.slow-call-rate-threshold=100
resilience4j.circuitbreaker.instances.itemServiceCircuitBreaker.slow-call-duration-threshold=2000ms
resilience4j.circuitbreaker.instances.itemServiceCircuitBreaker.wait-duration-in-open-state=5000ms
#resilience4j.circuitbreaker.instances.itemServiceCircuitBreaker.ring-buffer-size-in-half-open-state=2
#resilience4j.circuitbreaker.instances.itemServiceCircuitBreaker.ring-buffer-size-in-closed-state=5

# Retry
resilience4j.retry.instances.itemServiceRetry.max-attempts=3
resilience4j.retry.instances.itemServiceRetry.wait-duration=500ms
resilience4j.retry.instances.itemServiceRetry.enable-exponential-backoff=true
resilience4j.retry.instances.itemServiceRetry.exponential-backoff-multiplier=2
#resilience4j.retry.instances.itemServiceRetry.max-wait-duration=5000ms

# graphana/prometheus
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.prometheus.metrics.export.enabled=true